---
#ansible-galaxy collection install community.vmware
- name:  Check for upgrade tgz file /home/{{ os_user }}/{{ splunk_tgz }}
  stat: 
    path: /home/{{ os_user }}/{{ splunk_tgz }}
    get_checksum: yes  
    checksum_algorithm: md5
  register: splunk_tgz_downloaded_flag
  become: yes


- name: Uploading ./files/{{ splunk_tgz }}  to /home/{{ os_user }}/
  copy:
    src: "files/{{ splunk_tgz }}"
    dest: /home/{{ os_user }}
    mode: '0640'
    owner: "{{ os_user }}"
    group: "{{ os_group }}"
  become: yes
  when: splunk_tgz_downloaded_flag.stat.exists == False and not download_tgz_from_splunk_servers 


- name: Check if Splunk is booting through initd
  stat: 
    path: /etc/init.d/splunk
  register: initd_run_flag

- name: Check if Splunk is booting through systemd
  stat: 
    path: /etc/systemd/system/Splunkd.service
  register: systemd_run_flag

- name: initd Stop Splunk pre-upgrade
  command: "{{ splunk_home }}/bin/splunk stop"
  become: yes  
  when: initd_run_flag.stat.exists == True

- name: systemd Stop Splunk pre-upgrade
  systemd:
    name: Splunkd
    state: stopped
  become: yes
  when: systemd_run_flag.stat.exists == True

#- name: Take snapshot of a VM using quiesce and memory flag on
#  community.vmware.vmware_guest_snapshot:
#    hostname: "{{ vcenter_hostname }}"
#    username: "{{ vcenter_username }}"
#    password: "{{ vcenter_password }}"
#    datacenter: "{{ datacenter_name }}"
#    folder: "/{{ datacenter_name }}/vm/"
#    name: "{{ guest_name }}"
#    state: present
#    snapshot_name: dummy_vm_snap_0001
#    quiesce: true
#    memory_dump: true
#  delegate_to: localhost

- name: Extract {{ splunk_tgz }} over {{ splunk_home }} to upgrade
  unarchive:
    src: /home/{{ os_user }}/{{ splunk_tgz }}
    dest: "{{ splunk_home }}/.."
    remote_src: yes
    owner: "{{ os_user }}"
    group: "{{ os_group }}"
  become: yes

- name: Removing booting options
  command: "{{ splunk_home }}/bin/splunk disable boot-start --no-prompt --answer-yes --accept-license"
  become: yes
  when: 
    - install_method == "systemd"

- name: Booting Splunk though systemd
  command: "{{ splunk_home }}/bin/splunk enable boot-start -systemd-managed 1 -user {{ os_user }} --no-prompt --answer-yes --accept-license"
  become: yes
  when: 
    - install_method == "systemd"


- name: Start Splunk via systemd
  command: "systemctl start Splunkd"
  become: yes
  when: 
    - install_method == "systemd"
