---
#Requirements
# ansible-galaxy collection install community.general
# Render key on awx server  pwgen -N 1 -s 30
#install awx container ansible-playbook -i inventory install.yml run from /home/root/awx/installer/inventory
# if failure on TASK [local_docker : Create Preload data] run /usr/bin/awx-manage create_preload_data from within container awx_task
# docker exec -it awx_task "/bin/bash"
# /usr/bin/awx-manage create_preload_data (can fail, run untill it works)
# ansible-galaxy collection install community.general is needed

- hosts: all
  vars:
    post_install: |
      Do this after play is complete:
        - install awx container ansible-playbook -i inventory install.yml
        - run from /home/root/awx/installer/
        - /usr/bin/awx-manage create_preload_data from within container awx_task

  tasks:
    - name: Update the apt cache
      become: yes
      apt:
        name: "*"
        state: latest
        update_cache: yes
        force_apt_get: yes

    - name: Install requred base packages
      package:
        name:
          - python3
          - sysstat
          - apt-transport-https
          - ca-certificates
          - curl
          - gnupg2
          - software-properties-common
          - python3-pip
          - wget
          - git
        state: latest
      become: yes

    - name: Add apt docker signing key from official docker repo
      apt_key:
        url: https://download.docker.com/linux/debian/gpg
        state: present

    - name: Add docker repo for Debian Stretch
      apt_repository:
        repo: deb [arch=amd64] https://download.docker.com/linux/debian stretch stable
        state: present

    - name: Update the apt cache after adding docker repo
      become: yes
      apt:
        name: "*"
        state: latest
        update_cache: yes
        force_apt_get: yes

    - name: Install requred packages app package
      package:
        name:
          - nodejs
          - npm
          - pwgen
          - python3-docker
          - docker-ce
        state: latest
      become: yes

    - name: Install packages from pip3 - Ansible and docker-compose
      pip:
        executable: pip3
        name:
          - ansible
          - requests
          - docker-compose

    - name: Install npm package globally.
      community.general.npm:
        name: npm
        global: yes

    - name: Remove useless packages from the cache
      apt:
        autoclean: yes

    - name: Remove dependencies that are no longer required
      apt:
        autoremove: yes

    - name: Clone the aws repository to /home/root/awx
      git:
        repo: https://github.com/ansible/awx.git
        dest: /home/root/awx
        depth: 50
      ignore_errors: yes

    - name: Create inventory file for configuring awx
      template:
        src: inventory.j2
        dest: "/home/root/awx/installer/inventory"
      become: yes

    - name: What do you do now
      debug: msg={{ post_install.split('\n') }}
